C51 COMPILER V9.00   MAIN                                                                  05/29/2020 09:03:46 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include "lcd.h"
   3          
   4          sbit IRIN=P3^2;   //红外数据接收端口
   5          
   6          uchar IrValue[4];        //存储红外传输后的数据值
   7          uchar Time;                      //用于脉冲信号转数字信号的过程中，衡量时间
   8          uchar times;             //用于判断红外的多次输入
   9          uchar isIr;                       //是否进入了下一个中断
  10          
  11          void delay(uint i)
  12          {
  13   1              while(i--);
  14   1      }
  15          
  16          //接受外部输入，来进行运算的函数
  17          void Acessept(void)
  18          {
  19   1              //flag用于判断+-*/这四个符号，a代表第一个运算数，b代表第二个运算数，c代表结果，k代表中间变量
  20   1              uint a=0,b=0,c=0,k=0;
  21   1              uchar flag=0;
  22   1                times = 0;
  23   1               while(times == 0)                              //如果times == 0,代表输入的数还在a的范围内
  24   1               {                                                              //当按下0x43这个键位代表，a输入完成，进入下一个输入当中
  25   2                      while(isIr);                            //防止因为以为一次输入，而造成大量的重复显示，重复判断
  26   2                      switch(IrValue[2])                      //对传入的数据位进行判断
  27   2                      {
  28   3                        case 0x16:                            //对相应的键位，对应相应的代表值，输出代表值，对a进行赋值
  29   3                                      Lcd1602_WriteData(0x30);         //余下依旧
  30   3                                      a *= 10;
  31   3                                      a += 1;
  32   3                                      isIr = 1;                        //一次中断对应一次显示赋值
  33   3                              break;
  34   3                      case 0x0c:
  35   3                                      Lcd1602_WriteData(0x30+0x01);
  36   3                                      a *= 10;
  37   3                                      a += 1;
  38   3                                      isIr = 1;       
  39   3                              break;
  40   3                      case 0x18:
  41   3                                      Lcd1602_WriteData(0x30+0x02);
  42   3                                      a *= 10;
  43   3                                      a += 2;
  44   3                                      isIr = 1;       
  45   3                              break;
  46   3                      case 0x5e:
  47   3                                      Lcd1602_WriteData(0x30+0x03);
  48   3                                      a *= 10;
  49   3                                      a += 3;
  50   3                                      isIr = 1;       
  51   3                              break;
  52   3                      case 0x08:
  53   3                                      Lcd1602_WriteData(0x30+0x04);
  54   3                                      a *= 10;
  55   3                                      a += 4;
C51 COMPILER V9.00   MAIN                                                                  05/29/2020 09:03:46 PAGE 2   

  56   3                                      isIr = 1;       
  57   3                              break;
  58   3                      case 0x1c:
  59   3                                      Lcd1602_WriteData(0x30+0x05);
  60   3                                      a *= 10;
  61   3                                      a += 5;
  62   3                                      isIr = 1;       
  63   3                              break;
  64   3                      case 0x5a:
  65   3                                      Lcd1602_WriteData(0x30+0x06);
  66   3                                      a *= 10;
  67   3                                      a += 6;
  68   3                                      isIr = 1;       
  69   3                              break;
  70   3                      case 0x42:
  71   3                                      Lcd1602_WriteData(0x30+0x07);
  72   3                                      a *= 10;
  73   3                                      a += 7;
  74   3                                      isIr = 1;                       
  75   3                              break;
  76   3                      case 0x52:
  77   3                                      Lcd1602_WriteData(0x30+0x08);
  78   3                                      a *= 10;
  79   3                                      a += 8;
  80   3                                      isIr = 1;       
  81   3                              break;
  82   3                      case 0x4a:
  83   3                                      Lcd1602_WriteData(0x30+0x09);
  84   3                                      a *= 10;
  85   3                                      a += 9;
  86   3                                      isIr = 1;       
  87   3                              break;
  88   3                      case 0x43:                 //这是进入下一位输入的标志按钮
  89   3                                      times++;        
  90   3                              break;
  91   3              //      case 0x40:
  92   3              //                      Lcd1602_WriteCom(0x0F);
  93   3              //                      Lcd1602_WriteCom(0x04);
  94   3              //                       Lcd1602_WriteData(0x20);
  95   3              //                       Lcd1602_WriteCom(0x06);
  96   3              //                      a = (int)a/10;
  97   3              //                      isIr = 1;
  98   3              //              break;
  99   3               }
 100   2               }
 101   1               delay(100);
 102   1               times = 0;                             //归零重新判断
 103   1               IrValue[2] = 0x16;              //防止由于上一次的结束标志，使得下一次的赋值提前结束
 104   1              while(times == 0)
 105   1              {
 106   2                      while(isIr);             //同样的道理
 107   2               switch(IrValue[2])
 108   2               {
 109   3                              case 0x09:
 110   3                                      Lcd1602_WriteData(0x2b);
 111   3                                      flag = 0;
 112   3                                      isIr = 1;
 113   3                                      times++;        
 114   3                              break;
 115   3                      case 0x15:
 116   3                                      Lcd1602_WriteData(0x2d);
 117   3                                      flag = 1;
C51 COMPILER V9.00   MAIN                                                                  05/29/2020 09:03:46 PAGE 3   

 118   3                                      isIr = 1;
 119   3                                      times++;        
 120   3                              break;
 121   3                      case 0x19:
 122   3                                      Lcd1602_WriteData(0x2a);
 123   3                                      flag = 2;
 124   3                                      isIr = 1;
 125   3                                      times++;        
 126   3                              break;
 127   3                      case 0x0d:
 128   3                                      Lcd1602_WriteData(0x2f);
 129   3                                      flag = 3;
 130   3                                      isIr = 1;
 131   3                                      times++;        
 132   3                              break;   
 133   3               }
 134   2               }
 135   1               delay(1000);
 136   1               times = 0;                               //归零
 137   1               IrValue[2] = 0x45;               //对上次输入的结束标志进行清零，防止对下一次的操作提前结束
 138   1               while(times == 0)
 139   1               {
 140   2               while(isIr);
 141   2               switch(IrValue[2])
 142   2               {
 143   3                        case 0x16:                       //同理
 144   3                                      Lcd1602_WriteData(0x30);
 145   3                                      b *= 10;
 146   3                                      b += 0; 
 147   3                                      isIr = 1;
 148   3                              break;
 149   3                      case 0x0c:
 150   3                                      Lcd1602_WriteData(0x30+0x01);
 151   3                                      b *= 10;
 152   3                                      b += 1;
 153   3                                      isIr = 1;       
 154   3                              break;
 155   3                      case 0x18:
 156   3                                      Lcd1602_WriteData(0x30+0x02);
 157   3                                      b *= 10;
 158   3                                      b += 2;
 159   3                                      isIr = 1;       
 160   3                              break;
 161   3                      case 0x5e:
 162   3                                      Lcd1602_WriteData(0x30+0x03);
 163   3                                      b *= 10;
 164   3                                      b += 3;
 165   3                                      isIr = 1;       
 166   3                              break;
 167   3                      case 0x08:
 168   3                                      Lcd1602_WriteData(0x30+0x04);
 169   3                                      b *= 10;
 170   3                                      b += 4;
 171   3                                      isIr = 1;       
 172   3                              break;
 173   3                      case 0x1c:
 174   3                                      Lcd1602_WriteData(0x30+0x05);
 175   3                                      b *= 10;
 176   3                                      b += 5;
 177   3                                      isIr = 1;       
 178   3                              break;
 179   3                      case 0x5a:
C51 COMPILER V9.00   MAIN                                                                  05/29/2020 09:03:46 PAGE 4   

 180   3                                      Lcd1602_WriteData(0x30+0x06);
 181   3                                      b *= 10;
 182   3                                      b += 6;
 183   3                                      isIr = 1;       
 184   3                              break;
 185   3                      case 0x42:
 186   3                                      Lcd1602_WriteData(0x30+0x07);
 187   3                                      b *= 10;
 188   3                                      b += 7;
 189   3                                      isIr = 1;       
 190   3                              break;
 191   3                      case 0x52:
 192   3                                      Lcd1602_WriteData(0x30+0x08);
 193   3                                      b *= 10;
 194   3                                      b += 8;
 195   3                                      isIr = 1;       
 196   3                              break;
 197   3                      case 0x4a:
 198   3                                      Lcd1602_WriteData(0x30+0x09);
 199   3                                      b *= 10;
 200   3                                      b += 9;
 201   3                                      isIr = 1;       
 202   3                              break;
 203   3                      case 0x43:
 204   3                                      times++;        
 205   3                              break;
 206   3                      //case 0x40:
 207   3                              //      Lcd1602_WriteCom(0x0F);
 208   3                              //      Lcd1602_WriteCom(0x04);
 209   3                              //       Lcd1602_WriteData(0x20);
 210   3                              //       Lcd1602_WriteCom(0x06);
 211   3                              //      a = (int)a/10;
 212   3                              //      isIr = 1;                                               //退格键位
 213   3                      //      break;
 214   3               }
 215   2               }
 216   1      
 217   1                      Lcd1602_WriteCom(0x4f+0x80);
 218   1                      Lcd1602_WriteCom(0x04);    //对显示结果进行移位，到第二行末尾
 219   1                      switch(flag)
 220   1                      {
 221   2                              case 0:
 222   2                                      c = (int)a+b;
 223   2                                      while(c != 0) //对c一位一位的剥离
 224   2                                      {
 225   3                                              Lcd1602_WriteData(0x30 + c%10); //对结果c一位一位输出
 226   3                                              c = (int)c/10;
 227   3                                      }
 228   2                                      Lcd1602_WriteData(0x3d);
 229   2                                      a = 0;
 230   2                                      b = 0;
 231   2                                      c = 0;
 232   2                                      flag = 0;
 233   2                                      times = 0;                              //清零，结束这次运算
 234   2                               break;
 235   2                              case 1:
 236   2                                  //判断结果是大于零还是小于零
 237   2                                      if(a>b)
 238   2                                      {
 239   3                                              c=a-b;
 240   3                                      }
 241   2                                      else
C51 COMPILER V9.00   MAIN                                                                  05/29/2020 09:03:46 PAGE 5   

 242   2                                      {
 243   3                                              c=b-a;
 244   3                                      }               
 245   2                                      while(c!=0)      //一位一位显示
 246   2                                      {
 247   3                                              Lcd1602_WriteData(0x30+c%10);//显示结果的最后一位在0x4f的位置
 248   3                                                              c=c/10;//取前面的结果数据       
 249   3                                      }
 250   2                                      if(a<b) 
 251   2                                      {
 252   3                                              Lcd1602_WriteData(0x2d); //显示-号
 253   3                                      }
 254   2                                              Lcd1602_WriteData(0x3d); //显示等于号=
 255   2                                                      a=0;
 256   2                                                      b=0;
 257   2                                                      flag=0;
 258   2                                                      times=0;
 259   2                                      break;
 260   2                              case 2: 
 261   2                                      c=a*b;
 262   2                                      while(c!=0)      //一位一位显示
 263   2                                      {
 264   3                                              Lcd1602_WriteData(0x30+c%10);//显示结果的最后一位在0x4f的位置
 265   3                                              c=c/10;//取前面的结果数据       
 266   3                                      }
 267   2                                              Lcd1602_WriteData(0x3d); //显示等于号=
 268   2                                              a=0;
 269   2                                              b=0;
 270   2                                              flag=0;
 271   2                                              times=0;
 272   2                                      break;
 273   2                              case 3:
 274   2                                                      k = 0;
 275   2                                             c=(long)(((float)a/b)*1000);//强制转换为long。
 276   2                                                      while(c!=0)      //一位一位显示
 277   2                                                      {
 278   3                                                              k++;
 279   3                                                              Lcd1602_WriteData(0x30+c%10);//显示结果的最后一位在0x4f的位置
 280   3                                                              c=c/10;//取前面的结果数据
 281   3                                                              if(k==3)
 282   3                                                              {
 283   4                                                                      Lcd1602_WriteData(0x2e);
 284   4                                                                      k=0;
 285   4                                                              }               
 286   3                                                      }
 287   2                                                      if(a/b<0)         //如果a比b小的话那么除的结果最高位是0
 288   2                                                      {
 289   3                                                              Lcd1602_WriteData(0x30);        
 290   3                                                      }
 291   2                                                      Lcd1602_WriteData(0x3d); //显示等号
 292   2                                                      a=0;
 293   2                                                      b=0;
 294   2                                                      flag=0;
 295   2                                                      times=0;//全部清除为0
 296   2                                              break;
 297   2                                      }
 298   1      }
 299          
 300          
 301          //初始化端口，中断开关
 302          void IrInit(void)
 303          {
C51 COMPILER V9.00   MAIN                                                                  05/29/2020 09:03:46 PAGE 6   

 304   1              IT0 = 1;  //将外部中断方式调节成下降沿触发
 305   1              EX0 = 1;  //打开IE中的分布开关EX0
 306   1              EA = 1;   //打开IE中的总开关
 307   1      
 308   1              IRIN = 1;  //初始化端口
 309   1      }
 310          
 311          void main(void)
 312          {
 313   1              LcdInit();
 314   1              IrInit();
 315   1               while(1)
 316   1      {
 317   2               Acessept();
 318   2               while(IrValue[2] != 0x45);
 319   2           Lcd1602_WriteCom(0x01);
 320   2      }
 321   1       }
 322          
 323          void ReadIr() interrupt 0
 324          {
 325   1              uchar j,k;
 326   1              uint err;
 327   1              Time=0;
 328   1              isIr = 0;                                        
 329   1              delay(700);     //7ms
 330   1              if(IRIN==0)             //确认是否真的接收到正确的信号
 331   1              {        
 332   2                      
 333   2                      err=1000;                               //1000*10us=10ms,超过说明接收到错误的信号
 334   2                      /*当两个条件都为真是循环，如果有一个条件为假的时候跳出循环，免得程序出错的时
 335   2                      侯，程序死在这里*/      
 336   2                      while((IRIN==0)&&(err>0))       //等待前面9ms的低电平过去               
 337   2                      {                       
 338   3                              delay(1);
 339   3                              err--;
 340   3                      } 
 341   2                      if(IRIN==1)                     //如果正确等到9ms低电平
 342   2                      {
 343   3                              err=500;
 344   3                              while((IRIN==1)&&(err>0))                //等待4.5ms的起始高电平过去
 345   3                              {
 346   4                                      delay(1);
 347   4                                      err--;
 348   4                              }
 349   3                              for(k=0;k<4;k++)                //共有4组数据
 350   3                              {                               
 351   4                                      for(j=0;j<8;j++)        //接收一组数据
 352   4                                      {
 353   5      
 354   5                                              err=60;         
 355   5                                              while((IRIN==0)&&(err>0))//等待信号前面的560us低电平过去
 356   5                                              {
 357   6                                                      delay(1);
 358   6                                                      err--;
 359   6                                              }
 360   5                                              err=500;
 361   5                                              while((IRIN==1)&&(err>0))        //计算高电平的时间长度。
 362   5                                              {
 363   6                                                      delay(10);       //0.1ms
 364   6                                                      Time++;
 365   6                                                      err--;
C51 COMPILER V9.00   MAIN                                                                  05/29/2020 09:03:46 PAGE 7   

 366   6                                                      if(Time>30)
 367   6                                                      {
 368   7                                                              return;
 369   7                                                      }
 370   6                                              }
 371   5                                              IrValue[k]>>=1;  //k表示第几组数据
 372   5                                              if(Time>=8)                     //如果高电平出现大于565us，那么是1
 373   5                                              {
 374   6                                                      IrValue[k]|=0x80;
 375   6                                              }
 376   5                                              Time=0;         //用完时间要重新赋值                                                    
 377   5                                      }
 378   4                              }
 379   3                      }
 380   2                      if(IrValue[2]!=~IrValue[3])
 381   2                      {
 382   3                              return;
 383   3                      }
 384   2              }                       
 385   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1634    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
